"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é.

–°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º).
–î–æ–±–∞–≤–ª–µ–Ω—ã –≥–∞–π–¥—ã –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—é —Å—Å—ã–ª–æ–∫.
"""

import logging
from aiogram import types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from handlers.subscription import check_subscription, send_subscription_required

logger = logging.getLogger(__name__)


# ============================================================================
# –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
# ============================================================================

async def start_command(message: types.Message):
    """–ö–æ–º–∞–Ω–¥–∞ /start - –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    
    logger.info(f"üì® /start –æ—Ç {message.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
    is_subscribed = await check_subscription(message.from_user.id, message.bot)
    
    if not is_subscribed:
        # –ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        logger.info(f"üîí –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª")
        await send_subscription_required(message)
        return
    
    # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é")
    
    text = """üíé <b>BUFF Pay</b> ‚Äî –ø–æ–∫—É–ø–∞–π —Å–∫–∏–Ω—ã –≤ 2 —Ä–∞–∑–∞ –¥–µ—à–µ–≤–ª–µ, —á–µ–º –≤ Steam

–ï—Å–ª–∏ —Ç—ã –ø–æ–∫—É–ø–∞–µ—à—å —á–µ—Ä–µ–∑ Steam ‚Äî —Ç—ã –ø–µ—Ä–µ–ø–ª–∞—á–∏–≤–∞–µ—à—å –¥–æ 40%.
–í –ö–∏—Ç–∞–µ –µ—Å—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å BUFF (buff.163.com), –≥–¥–µ —Ç–µ –∂–µ —Å–∫–∏–Ω—ã —Å—Ç–æ—è—Ç –Ω–∞ —Ç—Ä–µ—Ç—å –¥–µ—à–µ–≤–ª–µ.

–ú—ã –ø–æ–º–æ–≥–∞–µ–º —Ç–µ–±–µ –∫—É–ø–∏—Ç—å —Ç–∞–º, –≥–¥–µ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å —Å–∞–º.

üìç <b>–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:</b>"""
    
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="ü™™ –ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="register")
    keyboard.button(text="üîó –ö–∞–∫ —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É", callback_data="send_link")
    keyboard.button(text="üßæ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="request")
    keyboard.button(text="‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data="how_it_works")
    keyboard.button(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")
    keyboard.adjust(1)
    
    try:
        await message.answer(text, reply_markup=keyboard.as_markup())
        logger.info(f"‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ start_command: {e}", exc_info=True)


# ============================================================================
# –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –ß–ï–†–ï–ó STEAM
# ============================================================================

async def button_register(callback: types.CallbackQuery):
    """–ì–∞–π–¥ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ BUFF —á–µ—Ä–µ–∑ Steam."""
    
    logger.info(f"üì® –ö–Ω–æ–ø–∫–∞ 'register' –æ—Ç {callback.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await check_subscription(callback.from_user.id, callback.bot)
    if not is_subscribed:
        await send_subscription_required(callback)
        return
    
    text = """ü™™ <b>–ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –Ω–∞ BUFF (buff.163.com)</b>

1Ô∏è‚É£ –ó–∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç <code>https://buff.163.com</code>

2Ô∏è‚É£ –ù–∞–∂–º–∏ ¬´Login via Steam¬ª (–∫–Ω–æ–ø–∫–∞ —Å –ª–æ–≥–æ—Ç–∏–ø–æ–º Steam)

3Ô∏è‚É£ –ê–≤—Ç–æ—Ä–∏–∑—É–π—Å—è —á–µ—Ä–µ–∑ —Å–≤–æ–π Steam-–∞–∫–∫–∞—É–Ω—Ç

4Ô∏è‚É£ –ü–æ—Å–ª–µ –≤—Ö–æ–¥–∞ BUFF –ø–æ–ø—Ä–æ—Å–∏—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:
   ‚Ä¢ –í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω
   ‚Ä¢ –í–≤–µ–¥–∏ —Å–≤–æ–π –Ω–æ–º–µ—Ä
   ‚Ä¢ –£–±–µ–¥–∏—Å—å —á—Ç–æ VPN –≤—ã–∫–ª—é—á–µ–Ω
   ‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏ SMS-–∫–æ–¥

5Ô∏è‚É£ –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç BUFF –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω!

‚úÖ <b>–¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å —Å–ø–æ–∫–æ–π–Ω–æ:</b>
   ‚Ä¢ –°–º–æ—Ç—Ä–µ—Ç—å –∏ –ø–æ–∫—É–ø–∞—Ç—å —Å–∫–∏–Ω—ã
   ‚Ä¢ –ù–∞ —Å–∞–π—Ç–µ –µ—Å—Ç—å —Ä—É—Å—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
   ‚Ä¢ –¶–µ–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —é–∞–Ω—è—Ö
   ‚Ä¢ –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –≤ ¬´–ò–∑–±—Ä–∞–Ω–Ω–æ–µ¬ª –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Ç–æ–≤–∞—Ä—ã

<b>–°–ª–µ–¥—É—é—â–∏–π —à–∞–≥:</b> –ù–∞–∂–º–∏ ¬´–ö–∞–∫ —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É¬ª, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –Ω–∞–π—Ç–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–∫–∏–Ω"""
    
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üîó –ö–∞–∫ —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É", callback_data="send_link")
    keyboard.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_start")
    keyboard.adjust(1)
    
    try:
        await callback.message.answer(text, reply_markup=keyboard.as_markup())
        logger.info(f"‚úÖ –ì–∞–π–¥ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ button_register: {e}", exc_info=True)
    
    await callback.answer()


# ============================================================================
# –ì–ê–ô–î –ü–û –°–°–´–õ–ö–ï –ù–ê –¢–û–í–ê–†
# ============================================================================

async def button_send_link(callback: types.CallbackQuery):
    """–ì–∞–π–¥ –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä."""
    
    logger.info(f"üì® –ö–Ω–æ–ø–∫–∞ 'send_link' –æ—Ç {callback.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await check_subscription(callback.from_user.id, callback.bot)
    if not is_subscribed:
        await send_subscription_required(callback)
        return
    
    text = """üîó <b>–ö–∞–∫ —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä —Å BUFF</b>

1Ô∏è‚É£ –ó–∞–π–¥–∏ –Ω–∞ <code>https://buff.163.com</code> –∏ –≤—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Å–∫–∏–Ω

2Ô∏è‚É£ –ù–∞–∂–º–∏ –Ω–∞ —Ç–æ–≤–∞—Ä, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—É

3Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏

–ü—Ä–∏–º–µ—Ä:
<code>https://buff.163.com/goods/42542</code>

4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å —ç—Ç—É —Å—Å—ã–ª–∫—É –∏ —Å—É–º–º—É –≤ —é–∞–Ω—è—Ö –≤ —ç—Ç–æ–≥–æ –±–æ—Ç–∞

5Ô∏è‚É£ –ú–µ–Ω–µ–¥–∂–µ—Ä @BuffinItMNG –Ω–∞–ø–∏—à–µ—Ç —Ç–µ–±–µ –∏ –ø–æ–ø—Ä–æ—Å–∏—Ç QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã

<b>–ì–æ—Ç–æ–≤ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É?</b> –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ üëá"""
    
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="üßæ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="request")
    keyboard.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_start")
    keyboard.adjust(1)
    
    try:
        await callback.message.answer(text, reply_markup=keyboard.as_markup())
        logger.info(f"‚úÖ –ì–∞–π–¥ –ø–æ —Å—Å—ã–ª–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ button_send_link: {e}", exc_info=True)
    
    await callback.answer()


# ============================================================================
# –ö–ê–ö –≠–¢–û –†–ê–ë–û–¢–ê–ï–¢
# ============================================================================

async def button_how_it_works(callback: types.CallbackQuery):
    """–û–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫–∞–∫ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç."""
    
    logger.info(f"üì® –ö–Ω–æ–ø–∫–∞ 'how_it_works' –æ—Ç {callback.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await check_subscription(callback.from_user.id, callback.bot)
    if not is_subscribed:
        await send_subscription_required(callback)
        return
    
    text = """‚öôÔ∏è <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç</b>

1Ô∏è‚É£ –¢—ã —Å–∞–º –∑–∞—Ö–æ–¥–∏—à—å –Ω–∞ —Å–∞–π—Ç <code>buff.163.com</code>

2Ô∏è‚É£ –í—ã–±–∏—Ä–∞–µ—à—å —Å–∫–∏–Ω, –¥–æ—Ö–æ–¥–∏—à—å –¥–æ –æ–ø–ª–∞—Ç—ã ‚Äî BUFF –ø–æ–∫–∞–∂–µ—Ç QR-–∫–æ–¥

3Ô∏è‚É£ –í–æ–∑–≤—Ä–∞—â–∞–µ—à—å—Å—è —Å—é–¥–∞ –∏ –∂–º—ë—à—å ¬´–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É¬ª

4Ô∏è‚É£ –í–≤–æ–¥–∏—à—å —Å—É–º–º—É –∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä

5Ô∏è‚É£ –ú—ã –ø–µ—Ä–µ–∞–¥—Ä–µ—Å—É–µ–º —Ç–µ–±—è –º–µ–Ω–µ–¥–∂–µ—Ä—É @BuffinItMNG

6Ô∏è‚É£ –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–ø—Ä–æ—Å–∏—Ç QR-–∫–æ–¥ –∏ –æ–ø–ª–∞—Ç–∏—Ç –ø–æ–∫—É–ø–∫—É —á–µ—Ä–µ–∑ –∫–∏—Ç–∞–π—Å–∫—É—é –ø–ª–∞—Ç—ë–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É

7Ô∏è‚É£ –°–∫–∏–Ω –ø–∞–¥–∞–µ—Ç –ø—Ä—è–º–æ –≤ —Ç–≤–æ–π –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å

üí∞ <b>–°—Ä–µ–¥–Ω—è—è —ç–∫–æ–Ω–æ–º–∏—è ‚Äî 30‚Äì40% –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å–æ Steam</b>"""
    
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_start")
    keyboard.adjust(1)
    
    try:
        await callback.message.answer(text, reply_markup=keyboard.as_markup())
        logger.info(f"‚úÖ –ì–∞–π–¥ '–∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç' –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ button_how_it_works: {e}", exc_info=True)
    
    await callback.answer()


# ============================================================================
# –ü–û–î–î–ï–†–ñ–ö–ê
# ============================================================================

async def button_support(callback: types.CallbackQuery):
    """–ö–æ–Ω—Ç–∞–∫—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏."""
    
    logger.info(f"üì® –ö–Ω–æ–ø–∫–∞ 'support' –æ—Ç {callback.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await check_subscription(callback.from_user.id, callback.bot)
    if not is_subscribed:
        await send_subscription_required(callback)
        return
    
    text = """üìû <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b>

–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –∏–ª–∏ –Ω—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å ‚Äî –ø–∏—à–∏ –º–µ–Ω–µ–¥–∂–µ—Ä—É:

<code>@BuffinItMNG</code>

–û–Ω –æ—Ç–≤–µ—Ç–∏—Ç –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–∂–µ—Ç —Å –∑–∞—è–≤–∫–æ–π."""
    
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_start")
    keyboard.adjust(1)
    
    try:
        await callback.message.answer(text, reply_markup=keyboard.as_markup())
        logger.info(f"‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ button_support: {e}", exc_info=True)
    
    await callback.answer()


# ============================================================================
# –í–û–ó–í–†–ê–¢ –í –ú–ï–ù–Æ
# ============================================================================

async def button_back_to_start(callback: types.CallbackQuery):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    
    logger.info(f"üì® –ö–Ω–æ–ø–∫–∞ 'back_to_start' –æ—Ç {callback.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await check_subscription(callback.from_user.id, callback.bot)
    if not is_subscribed:
        await send_subscription_required(callback)
        return
    
    text = """üíé <b>BUFF Pay</b> ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é

–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:"""
    
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="ü™™ –ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="register")
    keyboard.button(text="üîó –ö–∞–∫ —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É", callback_data="send_link")
    keyboard.button(text="üßæ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="request")
    keyboard.button(text="‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data="how_it_works")
    keyboard.button(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")
    keyboard.adjust(1)
    
    try:
        await callback.message.answer(text, reply_markup=keyboard.as_markup())
        logger.info(f"‚úÖ –í–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ button_back_to_start: {e}", exc_info=True)
    
    await callback.answer()
