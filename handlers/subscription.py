"""
–ú–æ–¥—É–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª.

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –∫–∞–Ω–∞–ª BUFF.
–ï—Å–ª–∏ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å.
"""

import logging
from aiogram import types, Bot
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config import REQUIRED_CHANNEL, REQUIRED_CHANNEL_ID

logger = logging.getLogger(__name__)


async def send_main_menu(message: types.Message):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞.
    
    Args:
        message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –º–µ–Ω—é
    """
    
    text = """üíé <b>BUFF Pay</b> ‚Äî –ø–æ–∫—É–ø–∞–π —Å–∫–∏–Ω—ã –≤ 2 —Ä–∞–∑–∞ –¥–µ—à–µ–≤–ª–µ, —á–µ–º –≤ Steam

–ï—Å–ª–∏ —Ç—ã –ø–æ–∫—É–ø–∞–µ—à—å —á–µ—Ä–µ–∑ Steam ‚Äî —Ç—ã –ø–µ—Ä–µ–ø–ª–∞—á–∏–≤–∞–µ—à—å –¥–æ 40%.
–í –ö–∏—Ç–∞–µ –µ—Å—Ç—å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å BUFF (buff.163.com), –≥–¥–µ —Ç–µ –∂–µ —Å–∫–∏–Ω—ã —Å—Ç–æ—è—Ç –Ω–∞ —Ç—Ä–µ—Ç—å –¥–µ—à–µ–≤–ª–µ.

–ú—ã –ø–æ–º–æ–≥–∞–µ–º —Ç–µ–±–µ –∫—É–ø–∏—Ç—å —Ç–∞–º, –≥–¥–µ —Ç—ã –Ω–µ –º–æ–∂–µ—à—å —Å–∞–º.

üìç <b>–í—ã–±–µ—Ä–∏ —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ:</b>"""
    
    keyboard = InlineKeyboardBuilder()
    keyboard.button(text="ü™™ –ö–∞–∫ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", callback_data="register")
    keyboard.button(text="üîó –ö–∞–∫ —Å–∫–∏–Ω—É—Ç—å —Å—Å—ã–ª–∫—É", callback_data="send_link")
    keyboard.button(text="üßæ –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É", callback_data="request")
    keyboard.button(text="‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç", callback_data="how_it_works")
    keyboard.button(text="üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")
    keyboard.adjust(1)
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º bot.send_message –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏
        bot = message.bot
        await bot.send_message(
            chat_id=message.chat.id,
            text=text,
            reply_markup=keyboard.as_markup(),
            parse_mode="HTML"
        )
        logger.info(f"‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é: {e}", exc_info=True)


async def check_subscription(user_id: int, bot: Bot) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∞–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
        
    Returns:
        True –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω, False –µ—Å–ª–∏ –Ω–µ—Ç
    """
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –∫–∞–Ω–∞–ª–µ
        member = await bot.get_chat_member(
            chat_id=REQUIRED_CHANNEL_ID,
            user_id=user_id
        )
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å: member, administrator, creator
        # restricted –∏ kicked - –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        if member.status in ["member", "administrator", "creator"]:
            logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª")
            return True
        else:
            logger.info(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ù–ï –ø–æ–¥–ø–∏—Å–∞–Ω (—Å—Ç–∞—Ç—É—Å: {member.status})")
            return False
            
    except Exception as e:
        # –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –∫–∞–Ω–∞–ª–µ) - —Å—á–∏—Ç–∞–µ–º —á—Ç–æ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è {user_id}: {e}")
        return False


async def send_subscription_required(message_or_callback):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª.
    
    Args:
        message_or_callback: Message –∏–ª–∏ CallbackQuery –æ–±—ä–µ–∫—Ç
    """
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–µ–ª –∑–∞–ø—Ä–æ—Å (—Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –∫–Ω–æ–ø–∫–∞)
    if isinstance(message_or_callback, types.CallbackQuery):
        message = message_or_callback.message
        user_id = message_or_callback.from_user.id
        bot = message_or_callback.bot
        chat_id = message.chat.id
    else:
        message = message_or_callback
        user_id = message.from_user.id
        bot = message.bot
        chat_id = message.chat.id
    
    logger.info(f"üîí –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è {user_id}")
    
    # –°—Ç—Ä–æ–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø—Ä–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    text = """<b>–û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞</b>

–î–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç —Ñ–µ–π–∫–æ–≤—ã—Ö –±–æ—Ç–æ–≤ –∏ –º–æ—à–µ–Ω–Ω–∏–∫–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª {channel}

–í –∫–∞–Ω–∞–ª–µ –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –º–æ—à–µ–Ω–Ω–∏–∫–∞—Ö.

–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É".""".format(channel=REQUIRED_CHANNEL)
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    keyboard = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
    keyboard.button(
        text="–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª",
        url=f"https://t.me/{REQUIRED_CHANNEL.replace('@', '')}"
    )
    
    # –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
    keyboard.button(
        text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
        callback_data="check_subscription"
    )
    
    keyboard.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º bot.send_message –≤–º–µ—Å—Ç–æ message.answer –¥–ª—è –Ω–∞–¥—ë–∂–Ω–æ—Å—Ç–∏
        await bot.send_message(
            chat_id=chat_id,
            text=text,
            reply_markup=keyboard.as_markup(),
            disable_web_page_preview=True,
            parse_mode="HTML"
        )
        logger.info(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
        
        # –ï—Å–ª–∏ —ç—Ç–æ callback - –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –Ω–µ–≥–æ
        if isinstance(message_or_callback, types.CallbackQuery):
            await message_or_callback.answer(
                "–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª",
                show_alert=True
            )
            
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø–æ–¥–ø–∏—Å–∫–µ: {e}", exc_info=True)


async def button_check_subscription(callback: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è".
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –∏ –ª–∏–±–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –¥–∞–ª—å—à–µ, –ª–∏–±–æ –ø—Ä–æ—Å–∏—Ç –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è —Å–Ω–æ–≤–∞.
    """
    
    user_id = callback.from_user.id
    logger.info(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await check_subscription(user_id, callback.bot)
    
    if is_subscribed:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–ø–∏—Å–∞–Ω - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        logger.info(f"‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é")
        
        await callback.answer("–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞", show_alert=False)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞–ø—Ä—è–º—É—é
        await send_main_menu(callback.message)
        
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω
        logger.warning(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—Å–µ –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω")
        
        await callback.answer(
            "–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É.",
            show_alert=True
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–ø–∏—Å–∫–µ —Å–Ω–æ–≤–∞
        await send_subscription_required(callback)

