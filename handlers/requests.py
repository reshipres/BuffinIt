"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–±–æ—Ä–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫ –Ω–∞ –ø–æ–∫—É–ø–∫—É.

–°–æ–±–∏—Ä–∞–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –∏ —Å—É–º–º—É, –∑–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É (–µ—Å–ª–∏ ID —É–∫–∞–∑–∞–Ω).
–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞—è–≤–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –∞–¥–º–∏–Ω–æ–≤.
"""

import logging
from aiogram import types, Bot
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from config import MANAGER_ID, MANAGER_USERNAME
from database import save_request
from admins import ADMINS
from handlers.subscription import check_subscription, send_subscription_required

logger = logging.getLogger(__name__)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏
# FSM = Finite State Machine (–∫–æ–Ω–µ—á–Ω—ã–π –∞–≤—Ç–æ–º–∞—Ç)
class RequestStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏ —Å–±–æ—Ä–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞—è–≤–∫–µ."""
    
    # –ñ–¥—ë–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä
    waiting_for_link = State()
    
    # –ñ–¥—ë–º —Å—É–º–º—É –≤ —é–∞–Ω—è—Ö
    waiting_for_amount = State()


async def button_request(callback: types.CallbackQuery, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞—è–≤–∫—É'.
    
    –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Å–±–æ—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ç–æ–≤–∞—Ä.
    """
    
    logger.info(f"üì® –ö–Ω–æ–ø–∫–∞ 'request' –æ—Ç {callback.from_user.id}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await check_subscription(callback.from_user.id, callback.bot)
    if not is_subscribed:
        await send_subscription_required(callback)
        return
    
    request_text = """üßæ <b>–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏</b>

–û—Ç–ø—Ä–∞–≤—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞:
1Ô∏è‚É£ –°—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä –Ω–∞ BUFF
2Ô∏è‚É£ –°—É–º–º—É –≤ —é–∞–Ω—è—Ö (¬•)

–ü—Ä–∏–º–µ—Ä:
<code>https://buff.163.com/goods/42542</code>
<code>150</code>

–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —è –ø–µ—Ä–µ–¥–∞–º –¥–∞–Ω–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É @BuffinItMNG.
–û–Ω –ø–æ–ø—Ä–æ—Å–∏—Ç QR-–∫–æ–¥ –∏ –æ–ø–ª–∞—Ç–∏—Ç –ø–æ–∫—É–ø–∫—É –æ—Ç –∫–∏—Ç–∞–π—Å–∫–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞."""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–æ–≤–æ–µ)
    await callback.message.answer(request_text)
    
    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —Å—Å—ã–ª–∫–∏
    await state.set_state(RequestStates.waiting_for_link)
    
    logger.info(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞—á–∞—Ç")
    
    # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏
    await callback.answer()


async def collect_request_data(message: types.Message, state: FSMContext):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–∫–∏.
    
    –≠—Ç–æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ waiting_for_link ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É
    - –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ waiting_for_amount ‚Äî —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É–º–º—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É
    """
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    current_state = await state.get_state()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∑–∞—è–≤–∫–∏ ‚Äî –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
    if current_state is None:
        return
    
    # === –≠–¢–ê–ü 1: –°–±–æ—Ä —Å—Å—ã–ª–∫–∏ ===
    if current_state == RequestStates.waiting_for_link:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ FSM
        await state.update_data(link=message.text)
        
        # –ü–µ—Ä–µ–≤–æ–¥–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç—Ç–∞–ø ‚Äî —Å–±–æ—Ä —Å—É–º–º—ã
        await state.set_state(RequestStates.waiting_for_amount)
        
        logger.info(f"üìé –°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ –æ—Ç {message.from_user.id}")
        
        # –ü—Ä–æ—Å–∏–º –≤–≤–µ—Å—Ç–∏ —Å—É–º–º—É
        await message.answer(
            "‚úÖ –°—Å—ã–ª–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞!\n\n"
            "–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å —Å—É–º–º—É –≤ —é–∞–Ω—è—Ö (¬•)\n\n"
            "–ü—Ä–∏–º–µ—Ä: <code>150</code>"
        )
    
    # === –≠–¢–ê–ü 2: –°–±–æ—Ä —Å—É–º–º—ã ===
    elif current_state == RequestStates.waiting_for_amount:
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        user_data = await state.get_data()
        link = user_data.get("link")
        amount = message.text
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = message.from_user.id
        username = message.from_user.username or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
        
        # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–∑–∞—è–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞)
        await state.clear()
        
        logger.info(f"üí≥ –ó–∞—è–≤–∫–∞ –≥–æ—Ç–æ–≤–∞ –æ—Ç {user_id}: {amount} ¬•")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞—è–≤–∫—É –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        save_request(user_id, username, amount, link)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await message.answer(
            "‚úÖ <b>–ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!</b>\n\n"
            f"üí≥ <b>–°—É–º–º–∞:</b> {amount} ¬•\n"
            f"üîó <b>–°—Å—ã–ª–∫–∞:</b> {link}\n\n"
            f"–ú–µ–Ω–µ–¥–∂–µ—Ä <code>@{MANAGER_USERNAME}</code> —Å–≤—è–∂–µ—Ç—Å—è —Å —Ç–æ–±–æ–π –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.\n"
            "–ë—É–¥—å –æ–Ω–ª–∞–π–Ω ‚Äî QR-–∫–æ–¥ –¥–µ–π—Å—Ç–≤—É–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è."
        )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É (–µ—Å–ª–∏ ID —É–∫–∞–∑–∞–Ω)
        if MANAGER_ID:
            await send_notification_to_manager(
                user_id=user_id,
                username=username,
                amount=amount,
                link=link
            )
        else:
            logger.warning("‚ö†Ô∏è  MANAGER_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º
        await send_notifications_to_admins(user_id, username, amount, link)


async def send_notification_to_manager(user_id: int, username: str, amount: str, link: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        username: Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        amount: –°—É–º–º–∞ –≤ —é–∞–Ω—è—Ö
        link: –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä
    """
    
    try:
        # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        from config import BOT_TOKEN
        bot = Bot(token=BOT_TOKEN)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        notification_text = f"""üì• <b>–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å BUFF Pay</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username}
üÜî <b>ID:</b> <code>{user_id}</code>
üí≥ <b>–°—É–º–º–∞:</b> <code>{amount}</code> ¬•
üîó <b>–°—Å—ã–ª–∫–∞:</b>
<code>{link}</code>

‚è∞ <b>–î–µ–π—Å—Ç–≤–∏–µ:</b> –°–≤—è–∂–∏—Å—å —á–µ—Ä–µ–∑ @BuffinItMNG –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ QR-–∫–æ–¥–∞."""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        await bot.send_message(
            chat_id=int(MANAGER_ID),
            text=notification_text,
            parse_mode="HTML"
        )
        
        logger.info(f"üîî –ú–µ–Ω–µ–¥–∂–µ—Ä –æ–ø–æ–≤–µ—â—ë–Ω –æ –∑–∞—è–≤–∫–µ –æ—Ç @{username}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
        await bot.session.close()
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É: {e}", exc_info=True)


async def send_notifications_to_admins(user_id: int, username: str, amount: str, link: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º –æ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–µ.
    
    Args:
        user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        username: Username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Telegram
        amount: –°—É–º–º–∞ –≤ —é–∞–Ω—è—Ö
        link: –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–æ–≤–∞—Ä
    """
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –∞–¥–º–∏–Ω–æ–≤ - –≤—ã—Ö–æ–¥–∏–º
    if not ADMINS:
        logger.warning("‚ö†Ô∏è  –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ –ø—É—Å—Ç. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")
        return
    
    try:
        # –°–æ–∑–¥–∞—ë–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        from config import BOT_TOKEN
        bot = Bot(token=BOT_TOKEN)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
        notification_text = f"""üîî <b>–ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê</b>

üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> @{username}
üÜî <b>ID:</b> <code>{user_id}</code>
üí∞ <b>–°—É–º–º–∞:</b> {amount} ¬•
üîó <b>–°—Å—ã–ª–∫–∞:</b>
{link}

üìä –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: /admin"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –∞–¥–º–∏–Ω—É
        for admin_id, admin_username in ADMINS:
            try:
                await bot.send_message(
                    chat_id=admin_id,
                    text=notification_text,
                    parse_mode="HTML"
                )
                logger.info(f"üîî –ê–¥–º–∏–Ω @{admin_username} (ID: {admin_id}) –æ–ø–æ–≤–µ—â—ë–Ω –æ –∑–∞—è–≤–∫–µ")
            except Exception as e:
                logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É @{admin_username}: {e}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
        await bot.session.close()
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∞–º: {e}", exc_info=True)
